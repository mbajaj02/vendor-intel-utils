From bf0f627488171dc386b5b9a4b60cbf45ce2f8efe Mon Sep 17 00:00:00 2001
From: Manvi Bajaj <manvi.bajaj@intel.com>
Date: Thu, 13 Feb 2025 10:37:47 +0000
Subject: [PATCH] Fix static analysis issues for thermal daemon

Below issues will be solved with this change.

+------------------------------------+
|Unchecked return value from library |
+------------------------------------+

Signed-off-by: Manvi Bajaj <manvi.bajaj@intel.com>
---
 Android.mk                            |   8 +-
 Makefile.am                           |   8 +-
 src/android_main.cpp                  |   8 +-
 src/thd_cdev_kbl_amdgpu.cpp           | 139 --------------------------
 src/thd_cdev_kbl_amdgpu.h             |  44 --------
 src/thd_engine_default.cpp            |  55 +---------
 src/thd_sensor_kbl_amdgpu_power.cpp   |  56 -----------
 src/thd_sensor_kbl_amdgpu_power.h     |  36 -------
 src/thd_sensor_kbl_amdgpu_thermal.cpp |  54 ----------
 src/thd_sensor_kbl_amdgpu_thermal.h   |  36 -------
 src/thd_sensor_kbl_g_mcp.cpp          |  78 ---------------
 src/thd_sensor_kbl_g_mcp.h            |  37 -------
 src/thd_zone_kbl_amdgpu.cpp           | 124 -----------------------
 src/thd_zone_kbl_amdgpu.h             |  41 --------
 src/thd_zone_kbl_g_mcp.cpp            | 106 --------------------
 src/thd_zone_kbl_g_mcp.h              |  41 --------
 16 files changed, 10 insertions(+), 861 deletions(-)
 delete mode 100644 src/thd_cdev_kbl_amdgpu.cpp
 delete mode 100644 src/thd_cdev_kbl_amdgpu.h
 delete mode 100644 src/thd_sensor_kbl_amdgpu_power.cpp
 delete mode 100644 src/thd_sensor_kbl_amdgpu_power.h
 delete mode 100644 src/thd_sensor_kbl_amdgpu_thermal.cpp
 delete mode 100644 src/thd_sensor_kbl_amdgpu_thermal.h
 delete mode 100644 src/thd_sensor_kbl_g_mcp.cpp
 delete mode 100644 src/thd_sensor_kbl_g_mcp.h
 delete mode 100644 src/thd_zone_kbl_amdgpu.cpp
 delete mode 100644 src/thd_zone_kbl_amdgpu.h
 delete mode 100644 src/thd_zone_kbl_g_mcp.cpp
 delete mode 100644 src/thd_zone_kbl_g_mcp.h

diff --git a/Android.mk b/Android.mk
index 0e6b670..eb7465d 100644
--- a/Android.mk
+++ b/Android.mk
@@ -31,13 +31,7 @@ LOCAL_SRC_FILES := \
 		src/thd_cdev_rapl_dram.cpp \
 		src/thd_cpu_default_binding.cpp \
 		src/thd_cdev_backlight.cpp \
-		src/thd_int3400.cpp \
-		src/thd_cdev_kbl_amdgpu.cpp \
-		src/thd_sensor_kbl_amdgpu_power.cpp \
-		src/thd_sensor_kbl_amdgpu_thermal.cpp \
-		src/thd_zone_kbl_g_mcp.cpp \
-		src/thd_sensor_kbl_g_mcp.cpp \
-		src/thd_zone_kbl_amdgpu.cpp
+		src/thd_int3400.cpp
 
 
 LOCAL_C_INCLUDES += external/libxml2/include
diff --git a/Makefile.am b/Makefile.am
index 836b8f0..15edf8f 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -80,13 +80,7 @@ thermald_SOURCES = \
 		src/thd_cpu_default_binding.cpp \
 		src/thd_cdev_backlight.cpp \
 		src/thd_cdev_modem.cpp \
-		src/thd_int3400.cpp \
-		src/thd_cdev_kbl_amdgpu.cpp \
-		src/thd_sensor_kbl_amdgpu_power.cpp \
-		src/thd_sensor_kbl_amdgpu_thermal.cpp \
-		src/thd_zone_kbl_g_mcp.cpp \
-		src/thd_sensor_kbl_g_mcp.cpp \
-		src/thd_zone_kbl_amdgpu.cpp
+		src/thd_int3400.cpp
 
 man5_MANS = man/thermal-conf.xml.5
 man8_MANS = man/thermald.8
diff --git a/src/android_main.cpp b/src/android_main.cpp
index 1832a52..9423fb2 100644
--- a/src/android_main.cpp
+++ b/src/android_main.cpp
@@ -239,7 +239,13 @@ int main(int argc, char *argv[]) {
 			exit(EXIT_FAILURE);
 		}
 	}
-	mkdir(TDCONFDIR, 0755); // Don't care return value as directory
+	if (mkdir(TDCONFDIR, 0755) !=0) {
+		if (errno != EEXIST) {
+			fprintf(stderr, "Cannot create '%s': %s\n", TDCONFDIR,
+					strerror(errno));
+			exit(EXIT_FAILURE);
+		}
+	}
 	if (!no_daemon) {
 		daemonize((char *) "/data/vendor/thermal-daemon",
 				(char *) "/data/vendor/thermal-daemon/thermald.pid");
diff --git a/src/thd_cdev_kbl_amdgpu.cpp b/src/thd_cdev_kbl_amdgpu.cpp
deleted file mode 100644
index b8f78ed..0000000
--- a/src/thd_cdev_kbl_amdgpu.cpp
+++ /dev/null
@@ -1,139 +0,0 @@
-/*
- * thd_cdev_kbl_amdgpu: amdgpu power control
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#include <dirent.h>
-
-#include "thd_cdev_kbl_amdgpu.h"
-
-cthd_cdev_kgl_amdgpu::cthd_cdev_kgl_amdgpu(unsigned int _index, int _cpu_index) :
-		cthd_cdev(_index, ""),activated(0) {
-	DIR *dir;
-	struct dirent *entry;
-	const std::string base_path = "/sys/class/hwmon/";
-
-	if ((dir = opendir(base_path.c_str())) != NULL) {
-		while ((entry = readdir(dir)) != NULL) {
-			// Check name
-			std::string name_path = base_path + entry->d_name + "/name";
-
-			std::ifstream ifs(name_path.c_str(), std::ifstream::in);
-			if (ifs.good()) {
-				std::string line;
-				while (std::getline(ifs, line)) {
-					if (line == "amdgpu") {
-						cdev_sysfs.update_path(base_path + entry->d_name + "/");
-					}
-				}
-				ifs.close();
-			}
-		}
-		closedir(dir);
-	}
-}
-
-int cthd_cdev_kgl_amdgpu::get_curr_state() {
-	if (activated)
-		return get_curr_state(true);
-	else
-		return min_state;
-}
-
-int cthd_cdev_kgl_amdgpu::get_curr_state(bool read_again) {
-	int ret;
-	int state;
-
-	ret = cdev_sysfs.read("power1_average", &state);
-	if (ret < 0) {
-		return min_state;
-	}
-
-	//workaround: Looks for comment in set_curr_state
-	if (state == 1000000)
-		state = max_state;
-
-	return state;
-}
-
-void cthd_cdev_kgl_amdgpu::set_curr_state(int state, int arg) {
-	int new_state = state;
-
-	if (!arg) {
-		activated = 0;
-		thd_log_info("ignore \n");
-		new_state = min_state;
-	} else
-		activated = 1;
-
-	// When power1_cap = 0 is written to sysfs it changes to max powercap value
-	// So this is a workaround
-	if (state == 0)
-		new_state = min_state;
-
-	if (cdev_sysfs.write("power1_cap", new_state) > 0)
-		curr_state = state;
-
-	thd_log_info("set cdev state index %d state %d wr:%d\n", index, state, state);
-}
-
-void cthd_cdev_kgl_amdgpu::set_curr_state_raw(int state, int arg) {
-	set_curr_state(state, arg);
-}
-
-int cthd_cdev_kgl_amdgpu::update() {
-	// min and max are opposite of actual sysfs value in thermald terms
-	if (cdev_sysfs.exists("power1_cap_min")) {
-		std::string type_str;
-		int ret;
-
-		ret = cdev_sysfs.read("power1_cap_min", &max_state);
-		if (ret < 0) {
-			thd_log_info("cthd_cdev_kgl_amdgpu : not present\n");
-			return THD_ERROR;
-		}
-	}
-
-	if (cdev_sysfs.exists("power1_cap_max")) {
-		std::string type_str;
-		int ret;
-
-		ret = cdev_sysfs.read("power1_cap_max", &min_state);
-		if (ret < 0) {
-			thd_log_info("cthd_cdev_kgl_amdgpu : not present\n");
-			return THD_ERROR;
-		}
-	}
-	set_inc_dec_value(-(min_state * (float) 10 / 100));
-        set_pid_param(-0.4, 0, 0);
-
-	return THD_SUCCESS;
-}
-
-int cthd_cdev_kgl_amdgpu::map_target_state(int target_valid, int target_state) {
-	return 0;
-}
-
-int cthd_cdev_kgl_amdgpu::get_phy_max_state() {
-
-        return min_state;
-}
diff --git a/src/thd_cdev_kbl_amdgpu.h b/src/thd_cdev_kbl_amdgpu.h
deleted file mode 100644
index 2da57a8..0000000
--- a/src/thd_cdev_kbl_amdgpu.h
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * thd_cdev_kbl_amdgpu: amdgpu power control
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#ifndef SRC_THD_CDEV_KBL_AMD_GPU_H_
-#define SRC_THD_CDEV_KBL_AMD_GPU_H_
-
-#include "thd_cdev.h"
-
-class cthd_cdev_kgl_amdgpu: public cthd_cdev {
-private:
-	int activated;
-public:
-	cthd_cdev_kgl_amdgpu(unsigned int _index, int _cpu_index);
-	void set_curr_state(int state, int arg);
-	void set_curr_state_raw(int state, int arg);
-	int get_curr_state();
-	int get_curr_state(bool read_again);
-	int update();
-	int map_target_state(int target_valid, int target_state);
-	int get_phy_max_state();
-};
-
-#endif /* SRC_THD_CDEV_BACKLIGHT_H_ */
diff --git a/src/thd_engine_default.cpp b/src/thd_engine_default.cpp
index 5040462..fbdbe91 100644
--- a/src/thd_engine_default.cpp
+++ b/src/thd_engine_default.cpp
@@ -36,14 +36,7 @@
 #include "thd_sensor_virtual.h"
 #include "thd_cdev_backlight.h"
 #include "thd_int3400.h"
-#include "thd_sensor_kbl_amdgpu_thermal.h"
-#include "thd_sensor_kbl_amdgpu_power.h"
-#include "thd_cdev_kbl_amdgpu.h"
-#include "thd_zone_kbl_amdgpu.h"
-#include "thd_sensor_kbl_g_mcp.h"
-#include "thd_zone_kbl_g_mcp.h"
-#include "thd_cdev_kbl_amdgpu.h"
-#include "thd_zone_kbl_g_mcp.h"
+
 
 #ifdef GLIB_SUPPORT
 #include "thd_cdev_modem.h"
@@ -172,30 +165,6 @@ int cthd_engine_default::read_thermal_sensors() {
 		thd_log_warn("Thermal DTS: No coretemp sysfs found\n");
 	}
 
-	cthd_sensor_kbl_amdgpu_thermal *amdgpu_thermal = new cthd_sensor_kbl_amdgpu_thermal(index);
-	if (amdgpu_thermal->sensor_update() == THD_SUCCESS) {
-		sensors.push_back(amdgpu_thermal);
-		++index;
-	} else {
-		delete amdgpu_thermal;
-	}
-
-	cthd_sensor_kbl_amdgpu_power *amdgpu_power = new cthd_sensor_kbl_amdgpu_power(index);
-	if (amdgpu_power->sensor_update() == THD_SUCCESS) {
-		sensors.push_back(amdgpu_power);
-		++index;
-	} else {
-		delete amdgpu_power;
-	}
-
-	cthd_sensor_kbl_g_mcp *mcp_power = new cthd_sensor_kbl_g_mcp(index);
-	if (mcp_power->sensor_update() == THD_SUCCESS) {
-		sensors.push_back(mcp_power);
-		++index;
-	} else {
-		delete mcp_power;
-	}
-
 	current_sensor_index = index;
 	// Add from XML sensor config
 	if (!parser_init() && parser.platform_matched()) {
@@ -402,16 +371,6 @@ int cthd_engine_default::read_thermal_zones() {
 		}
 	}
 
-
-	cthd_zone_kbl_g_mcp *mcp = new cthd_zone_kbl_g_mcp(index);
-	if (mcp->zone_update() == THD_SUCCESS) {
-		mcp->set_zone_active();
-		zones.push_back(mcp);
-		++index;
-	} else {
-		delete mcp;
-	}
-
 	current_zone_index = index;
 
 	// Add from XML thermal zone
@@ -712,18 +671,6 @@ int cthd_engine_default::read_cooling_devices() {
 			delete backlight_dev;
 	}
 
-	cthd_cdev *cdev_amdgpu = search_cdev("amdgpu");
-	if (!cdev_amdgpu) {
-		cthd_cdev_kgl_amdgpu *cdev_amdgpu = new cthd_cdev_kgl_amdgpu(
-				current_cdev_index, 0);
-		cdev_amdgpu->set_cdev_type("amdgpu");
-		if (cdev_amdgpu->update() == THD_SUCCESS) {
-			cdevs.push_back(cdev_amdgpu);
-			++current_cdev_index;
-		} else
-			delete cdev_amdgpu;
-	}
-
 	// Dump all cooling devices
 	for (unsigned i = 0; i < cdevs.size(); ++i) {
 		cdevs[i]->cdev_dump();
diff --git a/src/thd_sensor_kbl_amdgpu_power.cpp b/src/thd_sensor_kbl_amdgpu_power.cpp
deleted file mode 100644
index b69554b..0000000
--- a/src/thd_sensor_kbl_amdgpu_power.cpp
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * thd_sensor_kbl_amdgpu_power.cpp: Power Sensor for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#include <dirent.h>
-
-#include "thd_sensor_kbl_amdgpu_power.h"
-
-cthd_sensor_kbl_amdgpu_power::cthd_sensor_kbl_amdgpu_power(int index) :
-		cthd_sensor(index, "", "amdgpu-power", SENSOR_TYPE_RAW) {
-
-	DIR *dir;
-	struct dirent *entry;
-	const std::string base_path = "/sys/class/hwmon/";
-
-	if ((dir = opendir(base_path.c_str())) != NULL) {
-		while ((entry = readdir(dir)) != NULL) {
-			// Check name
-			std::string name_path = base_path + entry->d_name + "/name";
-
-			std::ifstream ifs(name_path.c_str(), std::ifstream::in);
-			if (ifs.good()) {
-				std::string line;
-				while (std::getline(ifs, line)) {
-					if (line == "amdgpu") {
-						update_path(
-								base_path + entry->d_name + "/power1_average");
-						set_scale(1000);
-					}
-				}
-				ifs.close();
-			}
-		}
-		closedir(dir);
-	}
-}
diff --git a/src/thd_sensor_kbl_amdgpu_power.h b/src/thd_sensor_kbl_amdgpu_power.h
deleted file mode 100644
index 32a934e..0000000
--- a/src/thd_sensor_kbl_amdgpu_power.h
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * thd_sensor_kbl_amdgpu_power.h: Power Sensor for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#ifndef THD_SENSOR_KBL_AMD_GPU_POWER_H
-#define THD_SENSOR_KBL_AMD_GPU_POWER_H
-
-#include "thd_sensor.h"
-
-class cthd_sensor_kbl_amdgpu_power: public cthd_sensor {
-private:
-public:
-	cthd_sensor_kbl_amdgpu_power(int index);
-};
-
-#endif
diff --git a/src/thd_sensor_kbl_amdgpu_thermal.cpp b/src/thd_sensor_kbl_amdgpu_thermal.cpp
deleted file mode 100644
index 9a732bc..0000000
--- a/src/thd_sensor_kbl_amdgpu_thermal.cpp
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * thd_sensor_kbl_amdgpu_thermal.cpp: Thermal Sensor for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#include <dirent.h>
-
-#include "thd_sensor_kbl_amdgpu_thermal.h"
-
-cthd_sensor_kbl_amdgpu_thermal::cthd_sensor_kbl_amdgpu_thermal(int index) :
-		cthd_sensor(index, "", "amdgpu-temperature", SENSOR_TYPE_RAW) {
-
-	DIR *dir;
-	struct dirent *entry;
-	const std::string base_path = "/sys/class/hwmon/";
-
-	if ((dir = opendir(base_path.c_str())) != NULL) {
-		while ((entry = readdir(dir)) != NULL) {
-			// Check name
-			std::string name_path = base_path + entry->d_name + "/name";
-
-			std::ifstream ifs(name_path.c_str(), std::ifstream::in);
-			if (ifs.good()) {
-				std::string line;
-				while (std::getline(ifs, line)) {
-					if (line == "amdgpu") {
-						update_path(base_path + entry->d_name + "/temp1_input");
-					}
-				}
-				ifs.close();
-			}
-		}
-		closedir(dir);
-	}
-}
diff --git a/src/thd_sensor_kbl_amdgpu_thermal.h b/src/thd_sensor_kbl_amdgpu_thermal.h
deleted file mode 100644
index 7bd9043..0000000
--- a/src/thd_sensor_kbl_amdgpu_thermal.h
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * thd_sensor_kbl_amdgpu_thermal.h: Thermal Sensor for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#ifndef THD_SENSOR_KBL_AMD_GPU_THERMAL_H
-#define THD_SENSOR_KBL_AMD_GPU_THERMAL_H
-
-#include "thd_sensor.h"
-
-class cthd_sensor_kbl_amdgpu_thermal: public cthd_sensor {
-private:
-public:
-	cthd_sensor_kbl_amdgpu_thermal(int index);
-};
-
-#endif
diff --git a/src/thd_sensor_kbl_g_mcp.cpp b/src/thd_sensor_kbl_g_mcp.cpp
deleted file mode 100644
index e19179a..0000000
--- a/src/thd_sensor_kbl_g_mcp.cpp
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * thd_sensor_kbl_amdgpu_power.cpp: Power Sensor for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#include <dirent.h>
-
-#include "thd_sensor_kbl_g_mcp.h"
-#include "thd_engine.h"
-
-cthd_sensor_kbl_g_mcp::cthd_sensor_kbl_g_mcp(int index) :
-		cthd_sensor(index, "", "kbl-g-mcp", SENSOR_TYPE_RAW) {
-
-	DIR *dir;
-	struct dirent *entry;
-	const std::string base_path = "/sys/class/hwmon/";
-
-	if ((dir = opendir(base_path.c_str())) != NULL) {
-		while ((entry = readdir(dir)) != NULL) {
-			// Check name
-			std::string name_path = base_path + entry->d_name + "/name";
-
-			std::ifstream ifs(name_path.c_str(), std::ifstream::in);
-			if (ifs.good()) {
-				std::string line;
-				while (std::getline(ifs, line)) {
-					if (line == "amdgpu") {
-						update_path(
-								base_path + entry->d_name + "/power1_average");
-						set_scale(1000);
-					}
-				}
-				ifs.close();
-			}
-		}
-		closedir(dir);
-	}
-}
-
-unsigned int cthd_sensor_kbl_g_mcp::read_temperature()
-{
-	csys_fs sysfs;
-	std::string buffer;
-	int gpu_power;
-	int ret;
-
-	thd_engine->rapl_power_meter.rapl_start_measure_power();
-
-	ret = sensor_sysfs.read("", &gpu_power);
-	if (ret <= 0)
-		gpu_power = 0;
-
-	unsigned int pkg_power = thd_engine->rapl_power_meter.rapl_action_get_power(
-					PACKAGE);
-	thd_log_info("Sensor %s :temp %u %u total %u \n", type_str.c_str(),
-			gpu_power, pkg_power, gpu_power + pkg_power);
-
-	return (unsigned int)(gpu_power + pkg_power);
-}
diff --git a/src/thd_sensor_kbl_g_mcp.h b/src/thd_sensor_kbl_g_mcp.h
deleted file mode 100644
index 025ab63..0000000
--- a/src/thd_sensor_kbl_g_mcp.h
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * thd_sensor_kbl_amdgpu_power.h: Power Sensor for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#ifndef THD_SENSOR_KBL_G_MCP_H
-#define THD_SENSOR_KBL_G_MCP_H
-
-#include "thd_sensor.h"
-
-class cthd_sensor_kbl_g_mcp: public cthd_sensor {
-private:
-public:
-	cthd_sensor_kbl_g_mcp(int index);
-	unsigned int read_temperature();
-};
-
-#endif
diff --git a/src/thd_zone_kbl_amdgpu.cpp b/src/thd_zone_kbl_amdgpu.cpp
deleted file mode 100644
index 7045981..0000000
--- a/src/thd_zone_kbl_amdgpu.cpp
+++ /dev/null
@@ -1,124 +0,0 @@
-/*
- * thd_zone_kbl_amdgpu.cpp: thermal zone for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#include <dirent.h>
-
-#include "thd_engine_default.h"
-#include "thd_sys_fs.h"
-#include "thd_zone_kbl_amdgpu.h"
-
-cthd_zone_kbl_amdgpu::cthd_zone_kbl_amdgpu(int index): cthd_zone(index, ""), sensor(NULL), dts_sysfs("/sys/class/hwmon/"){
-	type_str = "amdgpu";
-}
-
-int cthd_zone_kbl_amdgpu::zone_bind_sensors() {
-
-	cthd_sensor *sensor;
-
-
-	sensor = thd_engine->search_sensor("amdgpu-temperature");
-	if (sensor) {
-		bind_sensor(sensor);
-		return THD_SUCCESS;
-	}
-
-	return THD_ERROR;
-}
-
-int cthd_zone_kbl_amdgpu::read_trip_points() {
-	cthd_cdev *cdev;
-	DIR *dir;
-
-	struct dirent *entry;
-	const std::string base_path = "/sys/class/hwmon/";
-	int crit_temp = 0;
-
-	thd_log_info("cthd_zone_kbl_amdgpu::read_trip_points \n");
-
-	if ((dir = opendir(base_path.c_str())) != NULL) {
-		while ((entry = readdir(dir)) != NULL) {
-			// Check name
-			std::string name_path = base_path + entry->d_name + "/name";
-
-			std::ifstream ifs(name_path.c_str(), std::ifstream::in);
-			if (ifs.good()) {
-				std::string line;
-				while (std::getline(ifs, line)) {
-					if (line == "amdgpu") {
-						std::string path = base_path + entry->d_name + "/";
-						csys_fs hwmon_sysfs(path.c_str());
-
-						if (!hwmon_sysfs.exists("temp1_crit")) {
-							thd_log_info("path failed %s\n", path.c_str());
-							closedir(dir);
-							return THD_ERROR;
-						}
-						int ret = hwmon_sysfs.read("temp1_crit", &crit_temp);
-						if (ret < 0) {
-							thd_log_info("crit temp failed\n");
-							closedir(dir);
-							return THD_ERROR;
-						}
-					}
-				}
-				ifs.close();
-			}
-		}
-		closedir(dir);
-	}
-
-	if (!crit_temp)
-		return THD_ERROR;
-
-	cdev = thd_engine->search_cdev("amdgpu");
-	if (!cdev) {
-		thd_log_info("amdgpu failed\n");
-
-		return THD_ERROR;
-	}
-
-	cthd_trip_point trip_pt_passive(0, PASSIVE, crit_temp - 10000,
-					0, index, DEFAULT_SENSOR_ID);
-
-	trip_pt_passive.thd_trip_point_add_cdev(*cdev,
-						cthd_trip_point::default_influence);
-
-	trip_points.push_back(trip_pt_passive);
-
-	cthd_trip_point trip_pt_critical(1, CRITICAL, crit_temp,
-					0, index, DEFAULT_SENSOR_ID);
-	trip_pt_passive.thd_trip_point_add_cdev(*cdev,
-						cthd_trip_point::default_influence);
-
-	trip_points.push_back(trip_pt_critical);
-
-	thd_log_info("cthd_zone_kbl_amdgpu::read_trip_points  OK\n");
-
-	return THD_SUCCESS;
-}
-
-
-int cthd_zone_kbl_amdgpu::read_cdev_trip_points() {
-	return THD_SUCCESS;
-}
diff --git a/src/thd_zone_kbl_amdgpu.h b/src/thd_zone_kbl_amdgpu.h
deleted file mode 100644
index b238998..0000000
--- a/src/thd_zone_kbl_amdgpu.h
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * thd_zone_kbl_amdgpu.h: thermal zone for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#ifndef THD_ZONE_KBL_AMD_GPU_H
-#define THD_ZONE_KBL_AMD_GPU_H
-
-#include "thd_zone.h"
-
-class cthd_zone_kbl_amdgpu: public cthd_zone {
-protected:
-	cthd_sensor *sensor;
-	csys_fs dts_sysfs;
-public:
-	cthd_zone_kbl_amdgpu(int index);
-	int read_trip_points();
-	int zone_bind_sensors();
-	int read_cdev_trip_points();
-};
-
-#endif
diff --git a/src/thd_zone_kbl_g_mcp.cpp b/src/thd_zone_kbl_g_mcp.cpp
deleted file mode 100644
index ae2114f..0000000
--- a/src/thd_zone_kbl_g_mcp.cpp
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * thd_zone_kbl_amdgpu.cpp: thermal zone for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#include <dirent.h>
-
-#include "thd_engine_default.h"
-#include "thd_sys_fs.h"
-#include "thd_zone_kbl_g_mcp.h"
-
-cthd_zone_kbl_g_mcp::cthd_zone_kbl_g_mcp(int index): cthd_zone(index, ""), sensor(NULL), dts_sysfs("/sys/class/hwmon/"){
-	type_str = "kbl-g-mcp";
-}
-
-int cthd_zone_kbl_g_mcp::zone_bind_sensors() {
-
-	cthd_sensor *sensor;
-
-
-	sensor = thd_engine->search_sensor("kbl-g-mcp");
-	if (sensor) {
-		bind_sensor(sensor);
-		return THD_SUCCESS;
-	}
-
-	return THD_ERROR;
-}
-
-int cthd_zone_kbl_g_mcp::read_trip_points() {
-	cthd_cdev *cdev_gpu, *cdev_cpu;
-
-	thd_log_info("cthd_zone_kbl_g_mcp::read_trip_points \n");
-
-	cdev_gpu = thd_engine->search_cdev("amdgpu");
-	if (!cdev_gpu) {
-		thd_log_info("amdgpu failed\n");
-
-		return THD_ERROR;
-	}
-
-	int gpu_max_power = cdev_gpu->get_phy_max_state();
-
-	cdev_cpu = thd_engine->search_cdev("rapl_controller");
-	if (!cdev_cpu) {
-		thd_log_info("rapl_controller, failed\n");
-
-		return THD_ERROR;
-	}
-
-	int cpu_max_power = cdev_cpu->get_phy_max_state();
-
-	thd_log_info("gpu %d cpu %d\n", gpu_max_power, cpu_max_power);
-	int total_power = gpu_max_power + cpu_max_power;
-
-	cthd_trip_point trip_pt_passive(0, PASSIVE, total_power ,
-					0, index, DEFAULT_SENSOR_ID, PARALLEL);
-
-	pid_param_t pid_param;
-	pid_param.valid = 1;
-	pid_param.kp = -0.4f;
-	pid_param.ki = 0.0f;
-	pid_param.kd = 0.0f;
-	thd_log_info("==pid valid %f:%f:%f\n", pid_param.kp, pid_param.ki, pid_param.kd);
-	trip_pt_passive.thd_trip_point_add_cdev(*cdev_gpu,
-			cthd_trip_point::default_influence, thd_engine->get_poll_interval(),
-			0, 0, &pid_param);
-
-	pid_param.kp = -0.6f;
-	pid_param.ki = 0.0f;
-	pid_param.kd = 0.0f;
-
-	trip_pt_passive.thd_trip_point_add_cdev(*cdev_cpu,
-			cthd_trip_point::default_influence, thd_engine->get_poll_interval(),
-			0, 0, &pid_param);
-
-	trip_points.push_back(trip_pt_passive);
-
-	thd_log_info("cthd_zone_kbl_g_mcp::read_trip_points  OK\n");
-
-	return THD_SUCCESS;
-}
-
-
-int cthd_zone_kbl_g_mcp::read_cdev_trip_points() {
-	return THD_SUCCESS;
-}
diff --git a/src/thd_zone_kbl_g_mcp.h b/src/thd_zone_kbl_g_mcp.h
deleted file mode 100644
index 66ccfcd..0000000
--- a/src/thd_zone_kbl_g_mcp.h
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * thd_zone_kbl_amdgpu.h: thermal zone for KBL-G amdgpu
- *
- * Copyright (C) 2018 Intel Corporation. All rights reserved.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License version
- * 2 or later as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
- * 02110-1301, USA.
- *
- *
- * Author Name <Srinivas.Pandruvada@linux.intel.com>
- *
- */
-
-#ifndef THD_ZONE_KBL_G_MCP_H
-#define THD_ZONE_KBL_G_MCP_H
-
-#include "thd_zone.h"
-
-class cthd_zone_kbl_g_mcp: public cthd_zone {
-protected:
-	cthd_sensor *sensor;
-	csys_fs dts_sysfs;
-public:
-	cthd_zone_kbl_g_mcp(int index);
-	int read_trip_points();
-	int zone_bind_sensors();
-	int read_cdev_trip_points();
-};
-
-#endif
-- 
2.34.1

